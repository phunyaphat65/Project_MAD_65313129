import 'package:flutter/foundation.dart';
import 'package:collection/collection.dart'; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ import
import 'package:account/model/performanceItem.dart';
import 'package:account/database/performance_db.dart';

class PerformanceProvider with ChangeNotifier {
  final PerformanceDB _db = PerformanceDB(dbName: 'performances.db');
  List<PerformanceItem> _performances = [];

  List<PerformanceItem> get performances => List.unmodifiable(_performances);

  Future<void> initData() async {
    try {
      await refreshData();
    } catch (e) {
      debugPrint("‚ùå initData() ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e");
    }
  }

  Future<void> addPerformance(PerformanceItem performance) async {
    try {
      int newID = await _db.insertDatabase(performance);
      performance = performance.copyWith(keyID: newID);
      _performances.add(performance);
      notifyListeners();
    } catch (e) {
      debugPrint("‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e");
    }
  }

  Future<void> deletePerformance(int keyID) async {
    try {
      await _db.deleteData(keyID);
      _performances.removeWhere((item) => item.keyID == keyID);
      notifyListeners();
    } catch (e) {
      debugPrint("‚ùå ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e");
    }
  }

  Future<void> updatePerformance(PerformanceItem performance) async {
    try {
      await _db.updateData(performance);
      int index = _performances.indexWhere((item) => item.keyID == performance.keyID);
      if (index != -1) {
        _performances[index] = performance;
        notifyListeners();
      }
    } catch (e) {
      debugPrint("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e");
    }
  }

  Future<void> refreshData() async {
    try {
      List<PerformanceItem> newData = await _db.loadAllData();

      if (!const DeepCollectionEquality().equals(_performances, newData)) {
        debugPrint("üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà ${newData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
        _performances = newData;
        notifyListeners();
      } else {
        debugPrint("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI");
      }
    } catch (e) {
      debugPrint("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e");
    }
  }
}
